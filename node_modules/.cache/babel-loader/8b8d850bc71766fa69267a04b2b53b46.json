{"ast":null,"code":"import React,{useRef}from\"react\";// import { useForm } from \"react-hook-form\";\nimport emailjs from'@emailjs/browser';// const Contact = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n//   const onSubmit = (data, e) => {\n//     e.target.reset();\n//     console.log(\"Message submited: \" + JSON.stringify(data));\n//   };\n//   return (\n//     <>\n//       <form ref={form} className=\"contct-form\" onSubmit={sendEmail}>\n//         <div className=\"row\">\n//           <div className=\"col-md-6\">\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 name=\"user_name\"\n//                 className=\"form-control\"\n//                 placeholder=\"Full name\"\n//                 {...register(\"name\", { required: true })}\n//               />\n//               <label className=\"form-label\">Name</label>\n//               {errors.name && errors.name.type === \"required\" && (\n//                 <span className=\"invalid-feedback\">Name is required</span>\n//               )}\n//             </div>\n//           </div>\n//           {/* End .col-6 */}\n//           <div className=\"col-md-6\">\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"email\"\n//                 name=\"user_email\"\n//                 className=\"form-control\"\n//                 placeholder=\"Email address\"\n//                 {...register(\n//                   \"email\",\n//                   {\n//                     required: \"Email is Required\",\n//                     pattern: {\n//                       value: /\\S+@\\S+\\.\\S+/,\n//                       message: \"Entered value does not match email format\",\n//                     },\n//                   },\n//                   { required: true }\n//                 )}\n//               />\n//               <label className=\"form-label\">Email</label>\n//               {errors.email && (\n//                 <span className=\"invalid-feedback\">{errors.email.message}</span>\n//               )}\n//             </div>\n//           </div>\n//           {/* End .col-6 */}\n//           {/* <div className=\"col-12\">\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Subject\"\n//                 {...register(\"subject\", { required: true })}\n//               />\n//               <label className=\"form-label\">Subject</label>\n//               {errors.subject && (\n//                 <span className=\"invalid-feedback\">Subject is required.</span>\n//               )}\n//             </div>\n//           </div> */}\n//           {/* End .col-12 */}\n//           <div className=\"col-12\">\n//             <div className=\"form-group\">\n//               <textarea\n//                 rows=\"4\"\n//                 name=\"message\"\n//                 className=\"form-control\"\n//                 placeholder=\"Type comment\"\n//                 {...register(\"comment\", { required: true })}\n//               ></textarea>\n//               <label className=\"form-label\">Write message ...</label>\n//               {errors.comment && (\n//                 <span className=\"invalid-feedback\">Comment is required.</span>\n//               )}\n//             </div>\n//           </div>\n//           {/* End .col-12 */}\n//           <div className=\"col-12\">\n//             <div className=\"btn-bar\">\n//               <button className=\"px-btn px-btn-theme\">Send your message<input type=\"submit\" value=\"Send\" /></button>\n//             </div>\n//           </div>\n//           {/* End .col-12 */}\n//         </div>\n//       </form>\n//     </>\n//   );\n// };\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ContactUs=function ContactUs(){// const {\n//   register,\n//   handleSubmit,\n//   formState: { errors },\n// } = useForm();\nvar form=useRef();var sendEmail=function sendEmail(e){// console.log(e)\ne.preventDefault();emailjs.sendForm('service_utjijpo','template_aupib5l',form.current,'PB2HUWsnW6JHbVqLH').then(function(result){console.log(result.text);},function(error){console.log(error.text);});};return/*#__PURE__*/_jsxs(\"form\",{ref:form,className:\"contct-form\",onSubmit:sendEmail,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"user_name\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"user_email\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Message\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"message\"}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Send\"})]});};export default ContactUs;","map":{"version":3,"names":["React","useRef","emailjs","ContactUs","form","sendEmail","e","preventDefault","sendForm","current","then","result","console","log","text","error"],"sources":["/Users/gorilla/Documents/GitHub/OnlinePortfolio/src/components/Contact.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport emailjs from '@emailjs/browser';\r\n\r\n// const Contact = () => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm();\r\n\r\n//   const onSubmit = (data, e) => {\r\n//     e.target.reset();\r\n//     console.log(\"Message submited: \" + JSON.stringify(data));\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <form ref={form} className=\"contct-form\" onSubmit={sendEmail}>\r\n//         <div className=\"row\">\r\n//           <div className=\"col-md-6\">\r\n//             <div className=\"form-group\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"user_name\"\r\n//                 className=\"form-control\"\r\n//                 placeholder=\"Full name\"\r\n//                 {...register(\"name\", { required: true })}\r\n//               />\r\n//               <label className=\"form-label\">Name</label>\r\n//               {errors.name && errors.name.type === \"required\" && (\r\n//                 <span className=\"invalid-feedback\">Name is required</span>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           {/* End .col-6 */}\r\n\r\n//           <div className=\"col-md-6\">\r\n//             <div className=\"form-group\">\r\n//               <input\r\n//                 type=\"email\"\r\n//                 name=\"user_email\"\r\n//                 className=\"form-control\"\r\n//                 placeholder=\"Email address\"\r\n//                 {...register(\r\n//                   \"email\",\r\n//                   {\r\n//                     required: \"Email is Required\",\r\n//                     pattern: {\r\n//                       value: /\\S+@\\S+\\.\\S+/,\r\n//                       message: \"Entered value does not match email format\",\r\n//                     },\r\n//                   },\r\n//                   { required: true }\r\n//                 )}\r\n//               />\r\n//               <label className=\"form-label\">Email</label>\r\n//               {errors.email && (\r\n//                 <span className=\"invalid-feedback\">{errors.email.message}</span>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           {/* End .col-6 */}\r\n\r\n//           {/* <div className=\"col-12\">\r\n//             <div className=\"form-group\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 placeholder=\"Subject\"\r\n//                 {...register(\"subject\", { required: true })}\r\n//               />\r\n//               <label className=\"form-label\">Subject</label>\r\n//               {errors.subject && (\r\n//                 <span className=\"invalid-feedback\">Subject is required.</span>\r\n//               )}\r\n//             </div>\r\n//           </div> */}\r\n//           {/* End .col-12 */}\r\n          \r\n\r\n//           <div className=\"col-12\">\r\n//             <div className=\"form-group\">\r\n//               <textarea\r\n//                 rows=\"4\"\r\n//                 name=\"message\"\r\n//                 className=\"form-control\"\r\n//                 placeholder=\"Type comment\"\r\n//                 {...register(\"comment\", { required: true })}\r\n//               ></textarea>\r\n//               <label className=\"form-label\">Write message ...</label>\r\n//               {errors.comment && (\r\n//                 <span className=\"invalid-feedback\">Comment is required.</span>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           {/* End .col-12 */}\r\n\r\n//           <div className=\"col-12\">\r\n//             <div className=\"btn-bar\">\r\n//               <button className=\"px-btn px-btn-theme\">Send your message<input type=\"submit\" value=\"Send\" /></button>\r\n//             </div>\r\n//           </div>\r\n//           {/* End .col-12 */}\r\n//         </div>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// };\r\n\r\nexport const ContactUs = () => {\r\n  // const {\r\n  //   register,\r\n  //   handleSubmit,\r\n  //   formState: { errors },\r\n  // } = useForm();\r\n  const form = useRef();\r\n\r\n  const sendEmail = (e) => {\r\n    // console.log(e)\r\n    e.preventDefault();\r\n\r\n    emailjs.sendForm('service_utjijpo', 'template_aupib5l', form.current, 'PB2HUWsnW6JHbVqLH')\r\n      .then((result) => {\r\n          console.log(result.text);\r\n      }, (error) => {\r\n          console.log(error.text);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form ref={form} className=\"contct-form\" onSubmit={sendEmail}>\r\n      <label>Name</label>\r\n      <input type=\"text\" name=\"user_name\" />\r\n      <label>Email</label>\r\n      <input type=\"email\" name=\"user_email\" />\r\n      <label>Message</label>\r\n      <textarea name=\"message\" />\r\n      <input type=\"submit\" value=\"Send\" />\r\n      {/* <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"user_name\"\r\n              className=\"form-control\"\r\n              placeholder=\"Full name\"\r\n              {...register(\"name\", { required: true })}\r\n            />\r\n            <label className=\"form-label\">Name</label>\r\n            {errors.name && errors.name.type === \"required\" && (\r\n              <span className=\"invalid-feedback\">Name is required</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"user_email\"\r\n              className=\"form-control\"\r\n              placeholder=\"Email address\"\r\n              {...register(\r\n                \"email\",\r\n                {\r\n                  required: \"Email is Required\",\r\n                  pattern: {\r\n                    value: /\\S+@\\S+\\.\\S+/,\r\n                    message: \"Entered value does not match email format\",\r\n                  },\r\n                },\r\n                { required: true }\r\n              )}\r\n            />\r\n            <label className=\"form-label\">Email</label>\r\n            {errors.email && (\r\n              <span className=\"invalid-feedback\">{errors.email.message}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className=\"col-12\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Subject\"\r\n              {...register(\"subject\", { required: true })}\r\n            />\r\n            <label className=\"form-label\">Subject</label>\r\n            {errors.subject && (\r\n              <span className=\"invalid-feedback\">Subject is required.</span>\r\n            )}\r\n          </div>\r\n        </div> */}\r\n        \r\n\r\n        {/* <div className=\"col-12\">\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              rows=\"4\"\r\n              name=\"message\"\r\n              className=\"form-control\"\r\n              placeholder=\"Type comment\"\r\n              {...register(\"comment\", { required: true })}\r\n            ></textarea>\r\n            <label className=\"form-label\">Write message ...</label>\r\n            {errors.comment && (\r\n              <span className=\"invalid-feedback\">Comment is required.</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12\">\r\n          <div className=\"btn-bar\">\r\n            <button className=\"px-btn px-btn-theme\" type=\"submit\" value=\"Send\">Send your message</button>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,MAAM,KAAQ,OAAO,CACrC;AACA,MAAOC,QAAO,KAAM,kBAAkB,CAEtC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,wFAEA,MAAO,IAAMC,UAAS,CAAG,QAAZA,UAAS,EAAS,CAC7B;AACA;AACA;AACA;AACA;AACA,GAAMC,KAAI,CAAGH,MAAM,EAAE,CAErB,GAAMI,UAAS,CAAG,QAAZA,UAAS,CAAIC,CAAC,CAAK,CACvB;AACAA,CAAC,CAACC,cAAc,EAAE,CAElBL,OAAO,CAACM,QAAQ,CAAC,iBAAiB,CAAE,kBAAkB,CAAEJ,IAAI,CAACK,OAAO,CAAE,mBAAmB,CAAC,CACvFC,IAAI,CAAC,SAACC,MAAM,CAAK,CACdC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,IAAI,CAAC,CAC5B,CAAC,CAAE,SAACC,KAAK,CAAK,CACVH,OAAO,CAACC,GAAG,CAACE,KAAK,CAACD,IAAI,CAAC,CAC3B,CAAC,CAAC,CACN,CAAC,CAED,mBACE,cAAM,GAAG,CAAEV,IAAK,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAEC,SAAU,wBAC3D,+BAAmB,cACnB,cAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAG,cACtC,gCAAoB,cACpB,cAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAG,cACxC,kCAAsB,cACtB,iBAAU,IAAI,CAAC,SAAS,EAAG,cAC3B,cAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAG,GAkF/B,CAEX,CAAC,CAED,cAAeF,UAAS"},"metadata":{},"sourceType":"module"}