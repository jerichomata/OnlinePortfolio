{"ast":null,"code":"var _jsxFileName = \"/Users/gorilla/Documents/GitHub/OnlinePortfolio/src/components/Contact.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport emailjs from '@emailjs/browser';\n\n// const Contact = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = (data, e) => {\n//     e.target.reset();\n//     console.log(\"Message submited: \" + JSON.stringify(data));\n//   };\n\n//   return (\n//     <>\n//       <form ref={form} className=\"contct-form\" onSubmit={sendEmail}>\n//         <div className=\"row\">\n//           <div className=\"col-md-6\">\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 name=\"user_name\"\n//                 className=\"form-control\"\n//                 placeholder=\"Full name\"\n//                 {...register(\"name\", { required: true })}\n//               />\n//               <label className=\"form-label\">Name</label>\n//               {errors.name && errors.name.type === \"required\" && (\n//                 <span className=\"invalid-feedback\">Name is required</span>\n//               )}\n//             </div>\n//           </div>\n//           {/* End .col-6 */}\n\n//           <div className=\"col-md-6\">\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"email\"\n//                 name=\"user_email\"\n//                 className=\"form-control\"\n//                 placeholder=\"Email address\"\n//                 {...register(\n//                   \"email\",\n//                   {\n//                     required: \"Email is Required\",\n//                     pattern: {\n//                       value: /\\S+@\\S+\\.\\S+/,\n//                       message: \"Entered value does not match email format\",\n//                     },\n//                   },\n//                   { required: true }\n//                 )}\n//               />\n//               <label className=\"form-label\">Email</label>\n//               {errors.email && (\n//                 <span className=\"invalid-feedback\">{errors.email.message}</span>\n//               )}\n//             </div>\n//           </div>\n//           {/* End .col-6 */}\n\n//           {/* <div className=\"col-12\">\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Subject\"\n//                 {...register(\"subject\", { required: true })}\n//               />\n//               <label className=\"form-label\">Subject</label>\n//               {errors.subject && (\n//                 <span className=\"invalid-feedback\">Subject is required.</span>\n//               )}\n//             </div>\n//           </div> */}\n//           {/* End .col-12 */}\n\n//           <div className=\"col-12\">\n//             <div className=\"form-group\">\n//               <textarea\n//                 rows=\"4\"\n//                 name=\"message\"\n//                 className=\"form-control\"\n//                 placeholder=\"Type comment\"\n//                 {...register(\"comment\", { required: true })}\n//               ></textarea>\n//               <label className=\"form-label\">Write message ...</label>\n//               {errors.comment && (\n//                 <span className=\"invalid-feedback\">Comment is required.</span>\n//               )}\n//             </div>\n//           </div>\n//           {/* End .col-12 */}\n\n//           <div className=\"col-12\">\n//             <div className=\"btn-bar\">\n//               <button className=\"px-btn px-btn-theme\">Send your message<input type=\"submit\" value=\"Send\" /></button>\n//             </div>\n//           </div>\n//           {/* End .col-12 */}\n//         </div>\n//       </form>\n//     </>\n//   );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactUs = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const form = useRef();\n  const sendEmail = e => {\n    // console.log(e)\n    e.preventDefault();\n    emailjs.sendForm('service_utjijpo', 'template_aupib5l', form.current, 'PB2HUWsnW6JHbVqLH').then(result => {\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: form,\n    className: \"row\",\n    onSubmit: sendEmail,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"user_name\",\n          className: \"form-control\",\n          placeholder: \"Full name\",\n          ...register(\"name\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Enter you name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), errors.name && errors.name.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"invalid-feedback\",\n          children: \"Name is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"user_email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"px-btn px-btn-theme\",\n          type: \"submit\",\n          value: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactUs, \"a6pGL5yO7470ttDj6mm40P8c5Vg=\", false, function () {\n  return [useForm];\n});\n_c = ContactUs;\nexport default ContactUs;\nvar _c;\n$RefreshReg$(_c, \"ContactUs\");","map":{"version":3,"names":["React","useRef","useForm","emailjs","ContactUs","register","handleSubmit","formState","errors","form","sendEmail","e","preventDefault","sendForm","current","then","result","console","log","text","error","required","name","type"],"sources":["/Users/gorilla/Documents/GitHub/OnlinePortfolio/src/components/Contact.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport emailjs from '@emailjs/browser';\r\n\r\n// const Contact = () => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm();\r\n\r\n//   const onSubmit = (data, e) => {\r\n//     e.target.reset();\r\n//     console.log(\"Message submited: \" + JSON.stringify(data));\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <form ref={form} className=\"contct-form\" onSubmit={sendEmail}>\r\n//         <div className=\"row\">\r\n//           <div className=\"col-md-6\">\r\n//             <div className=\"form-group\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"user_name\"\r\n//                 className=\"form-control\"\r\n//                 placeholder=\"Full name\"\r\n//                 {...register(\"name\", { required: true })}\r\n//               />\r\n//               <label className=\"form-label\">Name</label>\r\n//               {errors.name && errors.name.type === \"required\" && (\r\n//                 <span className=\"invalid-feedback\">Name is required</span>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           {/* End .col-6 */}\r\n\r\n//           <div className=\"col-md-6\">\r\n//             <div className=\"form-group\">\r\n//               <input\r\n//                 type=\"email\"\r\n//                 name=\"user_email\"\r\n//                 className=\"form-control\"\r\n//                 placeholder=\"Email address\"\r\n//                 {...register(\r\n//                   \"email\",\r\n//                   {\r\n//                     required: \"Email is Required\",\r\n//                     pattern: {\r\n//                       value: /\\S+@\\S+\\.\\S+/,\r\n//                       message: \"Entered value does not match email format\",\r\n//                     },\r\n//                   },\r\n//                   { required: true }\r\n//                 )}\r\n//               />\r\n//               <label className=\"form-label\">Email</label>\r\n//               {errors.email && (\r\n//                 <span className=\"invalid-feedback\">{errors.email.message}</span>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           {/* End .col-6 */}\r\n\r\n//           {/* <div className=\"col-12\">\r\n//             <div className=\"form-group\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 placeholder=\"Subject\"\r\n//                 {...register(\"subject\", { required: true })}\r\n//               />\r\n//               <label className=\"form-label\">Subject</label>\r\n//               {errors.subject && (\r\n//                 <span className=\"invalid-feedback\">Subject is required.</span>\r\n//               )}\r\n//             </div>\r\n//           </div> */}\r\n//           {/* End .col-12 */}\r\n          \r\n\r\n//           <div className=\"col-12\">\r\n//             <div className=\"form-group\">\r\n//               <textarea\r\n//                 rows=\"4\"\r\n//                 name=\"message\"\r\n//                 className=\"form-control\"\r\n//                 placeholder=\"Type comment\"\r\n//                 {...register(\"comment\", { required: true })}\r\n//               ></textarea>\r\n//               <label className=\"form-label\">Write message ...</label>\r\n//               {errors.comment && (\r\n//                 <span className=\"invalid-feedback\">Comment is required.</span>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           {/* End .col-12 */}\r\n\r\n//           <div className=\"col-12\">\r\n//             <div className=\"btn-bar\">\r\n//               <button className=\"px-btn px-btn-theme\">Send your message<input type=\"submit\" value=\"Send\" /></button>\r\n//             </div>\r\n//           </div>\r\n//           {/* End .col-12 */}\r\n//         </div>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// };\r\n\r\nexport const ContactUs = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const form = useRef();\r\n\r\n  const sendEmail = (e) => {\r\n    // console.log(e)\r\n    e.preventDefault();\r\n\r\n    emailjs.sendForm('service_utjijpo', 'template_aupib5l', form.current, 'PB2HUWsnW6JHbVqLH')\r\n      .then((result) => {\r\n          console.log(result.text);\r\n      }, (error) => {\r\n          console.log(error.text);\r\n      });\r\n  };\r\n\r\n  return (\r\n\r\n    <form ref={form} className=\"row\" onSubmit={sendEmail}>\r\n      <div className=\"col-md-6\">\r\n        <div className=\"form-group\">\r\n        <input\r\n              type=\"text\"\r\n              name=\"user_name\"\r\n              className=\"form-control\"\r\n              placeholder=\"Full name\"\r\n              {...register(\"name\", { required: true })}\r\n            />\r\n        <label className=\"form-label\">Enter you name</label>\r\n            {errors.name && errors.name.type === \"required\" && (\r\n              <span className=\"invalid-feedback\">Name is required</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n      {/* <label>Full Name</label>\r\n      <input type=\"text\" name=\"user_name\" /> */}\r\n      <label>Email</label>\r\n      <input type=\"email\" name=\"user_email\" />\r\n      <label>Message</label>\r\n      <textarea name=\"message\" />\r\n\r\n      <div className=\"col-12\">\r\n        <div className=\"btn-bar\">\r\n          <input className=\"px-btn px-btn-theme\" type=\"submit\" value=\"Send\" />\r\n        </div>\r\n      </div>\r\n\r\n      {/* <input className=\"px-btn px-btn-theme\" type=\"submit\" value=\"Send\" />\r\n\r\n\r\n      {/* <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"user_name\"\r\n              className=\"form-control\"\r\n              placeholder=\"Full name\"\r\n              {...register(\"name\", { required: true })}\r\n            />\r\n            <label className=\"form-label\">Name</label>\r\n            {errors.name && errors.name.type === \"required\" && (\r\n              <span className=\"invalid-feedback\">Name is required</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"user_email\"\r\n              className=\"form-control\"\r\n              placeholder=\"Email address\"\r\n              {...register(\r\n                \"email\",\r\n                {\r\n                  required: \"Email is Required\",\r\n                  pattern: {\r\n                    value: /\\S+@\\S+\\.\\S+/,\r\n                    message: \"Entered value does not match email format\",\r\n                  },\r\n                },\r\n                { required: true }\r\n              )}\r\n            />\r\n            <label className=\"form-label\">Email</label>\r\n            {errors.email && (\r\n              <span className=\"invalid-feedback\">{errors.email.message}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className=\"col-12\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Subject\"\r\n              {...register(\"subject\", { required: true })}\r\n            />\r\n            <label className=\"form-label\">Subject</label>\r\n            {errors.subject && (\r\n              <span className=\"invalid-feedback\">Subject is required.</span>\r\n            )}\r\n          </div>\r\n        </div> */}\r\n        \r\n\r\n        {/* <div className=\"col-12\">\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              rows=\"4\"\r\n              name=\"message\"\r\n              className=\"form-control\"\r\n              placeholder=\"Type comment\"\r\n              {...register(\"comment\", { required: true })}\r\n            ></textarea>\r\n            <label className=\"form-label\">Write message ...</label>\r\n            {errors.comment && (\r\n              <span className=\"invalid-feedback\">Comment is required.</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12\">\r\n          <div className=\"btn-bar\">\r\n            <button className=\"px-btn px-btn-theme\" type=\"submit\" value=\"Send\">Send your message</button>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,OAAO,MAAM,kBAAkB;;AAEttB,CAAC,GAAGN,OAAO,EAAE;EACb,MAAMO,IAAI,GAAGR,MAAM,EAAE;EAErB,MAAMS,SAAS,GAAIC,CAAC,IAAK;IACvB;IACAA,CAAC,CAACC,cAAc,EAAE;IAElBT,OAAO,CAACU,QAAQ,CAAC,iBAAiB,EAAE,kBAAkB,EAAEJ,IAAI,CAACK,OAAO,EAAE,mBAAmB,CAAC,CACvFC,IAAI,CAAEC,MAAM,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,IAAI,CAAC;IAC5B,CAAC,EAAGC,KAAK,IAAK;MACVH,OAAO,CAACC,GAAG,CAACE,KAAK,CAACD,IAAI,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,oBAEE;IAAM,GAAG,EAAEV,IAAK;IAAC,SAAS,EAAC,KAAK;IAAC,QAAQ,EAAEC,SAAU;IAAA,wBACnD;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB;QAAK,SAAS,EAAC,YAAY;QAAA,wBAC3B;UACM,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,WAAW;UAChB,SAAS,EAAC,cAAc;UACxB,WAAW,EAAC,WAAW;UAAA,GACnBL,QAAQ,CAAC,MAAM,EAAE;YAAEgB,QAAQ,EAAE;UAAK,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QACxC,eACN;UAAO,SAAS,EAAC,YAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB,EAC/Cb,MAAM,CAACc,IAAI,IAAId,MAAM,CAACc,IAAI,CAACC,IAAI,KAAK,UAAU,iBAC7C;UAAM,SAAS,EAAC,kBAAkB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QACnC;MAAA;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA,QACF,eAIR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB;MAAO,IAAI,EAAC,OAAO;MAAC,IAAI,EAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG,eACxC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MAAU,IAAI,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eAE3B;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACrB;QAAK,SAAS,EAAC,SAAS;QAAA,uBACtB;UAAO,SAAS,EAAC,qBAAqB;UAAC,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IAChE;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QAsFD;AAEX,CAAC;AAAC,GA1IWnB,SAAS;EAAA,QAKhBF,OAAO;AAAA;AAAA,KALAE,SAAS;AA4ItB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}